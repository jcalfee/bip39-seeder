#!/usr/bin/env node

const read = require('read')
const argv = require('yargs').usage(`
Create or validate bip39 mnemonic seeds.
> ocean earn race rack swing odor yard manage illegal draw window desk

Suggested spelling corrections are provided.
`)
.example('$0 -c', 'Create a new random mnemonic seed')
.example('$0 -s', 'Validate an existing seed')
.option('create', {describe: 'Create a new secure random mnemonic seed', type: 'boolean', alias: 'c'})
.option('seed', {describe: 'Provide mnemonic seed (12 words or so)', type: 'string', alias: 's', default: null})
.option('bits', {describe: 'Bit strength', type: 'number', alias: 'b', default: 128})
.option('language', {describe: 'language: chinese_simplified, chinese_traditional, english, french, italian, japanese, spanish', type: 'string', alias: 'l', default: 'english'})
.option('no-suggest', {describe: 'Do not suggest correction to misspelled words in the mnemonic seed', type: 'boolean', default: false})
.help('help').alias('help', 'h').alias('help', '?')
.argv

const {randomMnemonicSeed} = require('..')
const {suggest, validSeed} = require('bip39-checker')

const noSuggest = argv['no-suggest']
const {language, bits} = argv

function assertValidSeed (seed) {
  const cs = validSeed(seed, language)
  if (cs.error) {
    console.error(cs.error)
    let oneSuggested = false // only show first suggestion (for security reasons)
    if (!noSuggest) {
      const words = seed.split(' ')
      let idx = 0
      for (const word of words) {
        idx++
        const suggestions = suggest(word)
        if (suggestions === true) {
          // console.error(`Word ${idx} ok`);
        } else if (!oneSuggested && suggestions !== true && suggestions.length) {
          oneSuggested = true
          console.error(`Word ${idx} suggestions: ${suggestions.join(', ')}`)
        }
      }
    }
    process.exit(1)
  }
}

if (argv.create && argv.seed) {
  console.error('WARNING: --create ignored (seed specified)')
}

if (argv.seed) {
  assertValidSeed(argv.seed)
  console.error('Seed is valid')
  process.exit(0)
}

if (argv.create) {
  randomMnemonicSeed({language, bits}, seed => {
    console.log(seed)
  })
} else {
  read({prompt: 'Mnemonic seed: ', silent: true}, (err, s) => {
    if (err || s.trim() === '') {
      console.error('Try -? for help or -c to create')
      process.exit(1)
    }
    assertValidSeed(s)
    console.error('Seed is valid')
    process.exit(0)
  })
}
